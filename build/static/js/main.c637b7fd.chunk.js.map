{"version":3,"sources":["logo.png","components/Header.js","components/Settings.js","components/Home.js","helpers/index.js","components/ResultTable.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","useState","isOpen","setIsOpen","Navbar","light","expand","style","backgroundColor","borderColor","marginBottom","NavItem","className","NavLink","href","src","logo","alt","width","NavbarBrand","font","NavbarToggler","onClick","Collapse","navbar","Nav","Settings","state","new_user","form_complete","searchWidget","name","n","email","e","point_id","line_id","driver","office_id","office_old","arrive_work","leave_work","lat","lon","start_addr","route","addUser","data2","geometry","attributes","Total_TravelTime","Total_Miles","querystring2","JSON","stringify","axios","post","proxyUrl2","catch","err","console","error","url","proxyUrl","data","parseInt","encodeURIComponent","then","setState","updateUser","log","getUserByEmail","Object","keys","map","k","join","get","res","users","features","loadModules","Search","length","user","OBJECTID","container","document","getElementById","searchTerm","value","url2","submitF","RouteTask","RouteParameters","FeatureSet","Graphic","that","address","search","event","results","feature","latitude","longitude","addr","Match_addr","routeTask","routeParams","stops","outSpatialReference","wkid","start","type","spatialReference","officeCoords","1","2","3","4","5","endPoint","end","push","solve","routeResults","alert","message","loadCss","this","to","Row","margin","Col","md","form","FormGroup","Label","for","Input","id","readOnly","defaultValue","onChange","target","Button","size","color","UncontrolledPopover","trigger","placement","PopoverBody","padding","border","borderRadius","position","bottom","right","Component","Home","outline","moment","extendMoment","Moment","convertTime","time","split","timeValue","hours","Number","minutes","ResultTable","new_user_p","new_user_l","user_route","distance","units","getData","filterF","paths","unitLookup","FeatureLayer","request","featureLayer","query","createQuery","Math","abs","spatialRelationship","returnGeometry","outFields","where","queryFeatures","response","mRight","Form","inline","bsSize","InputGroup","InputGroupAddon","addonType","InputGroupText","Table","hover","responsive","filter","d","arrive","leave","other_arrive","other_leave","f","m","Date","getTime","x","y","a","b","range_arrive","range","range_leave","contains","filterTime","fd","key","param","renderSwitch","App","Portal","OAuthInfo","IdentityManager","info","appId","popup","registerOAuthInfos","getCredential","portalUrl","checkSignInStatus","portal","authMode","load","fullName","destroyCredentials","window","location","reload","exact","path","Spinner","height","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","URL","process","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c637b7fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0902b57b.png\";","import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from 'reactstrap';\r\n\r\nimport logo from '../logo.png';\r\n\r\nconst Header = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const headerStyle = {\r\n    backgroundColor: '#FFAA00',\r\n    borderColor: '#FFF8EB',\r\n    marginBottom: '40px'\r\n  }\r\n  return (\r\n\r\n    <div>\r\n      <Navbar light expand=\"md\" style={headerStyle} >\r\n        <NavItem className=\"d-flex align-items-center\">\r\n          <NavLink className=\"font-weight-bold\" href=\"/\">\r\n            <img src={logo} alt=\"logo\" className=\"img-fluid\" style={{ width: 100 }} />\r\n          </NavLink>\r\n          <NavbarBrand className=\"d-inline-block p-0  align-items-left\" href=\"/\">\r\n            <h1 style={{ font: '36px Arial Black' }}>arcpool beta</h1>\r\n          </NavbarBrand>\r\n        </NavItem>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem className=\"d-flex align-items-center\">\r\n              <NavLink className=\"font-weight-bold\" href=\"/results\">Results</NavLink>\r\n            </NavItem>\r\n            <NavItem className=\"d-flex align-items-center\">\r\n              <NavLink className=\"font-weight-bold\" href=\"/settings\">Settings</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport { Col, Row, Button, FormGroup, Label, Input, UncontrolledPopover, PopoverBody } from \"reactstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { loadModules, loadCss } from \"esri-loader\";\r\nimport axios from \"axios\";\r\n\r\nclass Settings extends Component {\r\n  //--------------------- STATE---------------------\\\\\r\n  state = {\r\n    new_user: true,\r\n    form_complete: false,\r\n    searchWidget: null,\r\n    name: this.props.n,\r\n    email: this.props.e,\r\n    point_id: null,\r\n    line_id: null,\r\n    driver: 1,\r\n    office_id: 1,\r\n    office_old: null,\r\n    arrive_work: \"09:00\",\r\n    leave_work: \"17:00\",\r\n    lat: null,\r\n    lon: null,\r\n    start_addr: null,\r\n    route: null\r\n  };\r\n\r\n  //--------------------- LIFE CYCLE FUNCTIONS ---------------------\\\\\r\n  componentDidMount() {\r\n    loadCss();\r\n    this.getUserByEmail();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({ searchWidget: null });\r\n  }\r\n\r\n  //--------------------- CRUD OPERATIONS ---------------------\\\\\r\n  addUser = () => {\r\n    //--------------------- ROUTE ---------------------\\\\\r\n    if (!!this.state.route) {\r\n      const serviceUrl2 = 'https://services.arcgis.com/Wl7Y1m92PbjtJs5n/arcgis/rest/services/carpoolData/FeatureServer/1/addFeatures?f=json';\r\n      const proxyUrl2 = 'https://belan2.esri.com/DotNet/proxy.ashx?'\r\n      let url2 = proxyUrl2 + serviceUrl2;\r\n\r\n      const data2 = [{\r\n        \"geometry\": this.state.route.geometry,\r\n        'attributes': {\r\n          'email': this.state.email,\r\n          'travel_minutes': this.state.route.attributes.Total_TravelTime,\r\n          'travel_miles': this.state.route.attributes.Total_Miles,\r\n        }\r\n      }];\r\n\r\n      const querystring2 = 'features=' + JSON.stringify(data2);\r\n      axios\r\n        .post(url2, querystring2)\r\n        .catch(err => {\r\n          // handle any errors\r\n          console.error(err);\r\n        });\r\n    }\r\n\r\n    //--------------------- Line ---------------------\\\\\r\n    const serviceUrl = 'https://services.arcgis.com/Wl7Y1m92PbjtJs5n/arcgis/rest/services/carpoolData/FeatureServer/0/addFeatures?f=json&features=';\r\n    const proxyUrl = 'https://belan2.esri.com/DotNet/proxy.ashx?'\r\n    let url = proxyUrl + serviceUrl;\r\n\r\n    const data = [{\r\n      \"geometry\": {\r\n        \"x\": this.state.lon,\r\n        \"y\": this.state.lat,\r\n        \"spatialReference\": {\r\n          \"wkid\": 4326\r\n        }\r\n      },\r\n      'attributes': {\r\n        'name': this.state.name,\r\n        'email': this.state.email,\r\n        'arrive_work': this.state.arrive_work,\r\n        'leave_work': this.state.leave_work,\r\n        'driver': parseInt(this.state.driver),\r\n        'office_id': parseInt(this.state.office_id),\r\n        'start_addr': encodeURIComponent(this.state.start_addr)\r\n      }\r\n    }]\r\n\r\n    url += JSON.stringify(data)\r\n\r\n    axios\r\n      .post(url, JSON.stringify(data))\r\n      .then(() => {\r\n        this.setState({ form_complete: true });\r\n      })\r\n      .catch(err => {\r\n        // handle any errors\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  updateUser = () => {\r\n    //--------------------- ROUTE ---------------------\\\\\r\n    if (!!this.state.route) {\r\n      const serviceUrl2 = 'https://services.arcgis.com/Wl7Y1m92PbjtJs5n/arcgis/rest/services/carpoolData/FeatureServer/1/updateFeatures?f=json';\r\n      const proxyUrl2 = 'https://belan2.esri.com/DotNet/proxy.ashx?'\r\n      let url2 = proxyUrl2 + serviceUrl2;\r\n\r\n      const data2 = [{\r\n        \"geometry\": this.state.route.geometry,\r\n        'attributes': {\r\n          'OBJECTID': this.state.line_id,\r\n          'email': this.state.email,\r\n          'travel_minutes': this.state.route.attributes.Total_TravelTime,\r\n          'travel_miles': this.state.route.attributes.Total_Miles,\r\n        }\r\n      }];\r\n\r\n      const querystring2 = 'features=' + JSON.stringify(data2);\r\n      axios\r\n        .post(url2, querystring2)\r\n        .catch(err => {\r\n          // handle any errors\r\n          console.error(err);\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        });\r\n    }\r\n\r\n\r\n    //--------------------- POINT ---------------------\\\\\r\n    const serviceUrl = 'https://services.arcgis.com/Wl7Y1m92PbjtJs5n/arcgis/rest/services/carpoolData/FeatureServer/0/updateFeatures?f=json&features=';\r\n    const proxyUrl = 'https://belan2.esri.com/DotNet/proxy.ashx?'\r\n    let url = proxyUrl + serviceUrl;\r\n\r\n    const data = [{\r\n      \"geometry\": {\r\n        \"x\": this.state.lon,\r\n        \"y\": this.state.lat,\r\n        \"spatialReference\": {\r\n          \"wkid\": 4326\r\n        }\r\n      },\r\n      'attributes': {\r\n        'OBJECTID': this.state.point_id,\r\n        'name': this.state.name,\r\n        'email': this.state.email,\r\n        'arrive_work': this.state.arrive_work,\r\n        'leave_work': this.state.leave_work,\r\n        'driver': parseInt(this.state.driver),\r\n        'office_id': parseInt(this.state.office_id),\r\n        'start_addr': encodeURIComponent(this.state.start_addr)\r\n      }\r\n    }];\r\n\r\n    url += JSON.stringify(data)\r\n\r\n    axios\r\n      .post(url, JSON.stringify(data))\r\n      .then(() => {\r\n        this.setState({ form_complete: true });\r\n      })\r\n      .catch(err => {\r\n        // handle any errors\r\n        console.error(err);\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      });\r\n  };\r\n\r\n  getUserByEmail = () => {\r\n    //--------------------- POINT ---------------------\\\\\r\n    const serviceUrl = 'https://services.arcgis.com/Wl7Y1m92PbjtJs5n/arcgis/rest/services/carpoolData/FeatureServer/0/query?';\r\n    const proxyUrl = 'https://belan2.esri.com/DotNet/proxy.ashx?'\r\n    let url = proxyUrl + serviceUrl;\r\n\r\n    const data = {\r\n      \"f\": \"json\",\r\n      'where': \"email='\" + this.state.email + \"'\",\r\n      'outFields': \"*\"\r\n    };\r\n\r\n    const query = Object.keys(data)\r\n      .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(data[k]))\r\n      .join('&');\r\n\r\n    url = url + query;\r\n\r\n    axios.get(url)\r\n      .then(res => {\r\n        const users = res.data.features;\r\n        // fill in form and state with settings saved in db\r\n        loadModules([\"esri/widgets/Search\"])\r\n          .then(([Search]) => {\r\n            if (users.length > 0) {  // check to see if user is already saved\r\n              const user = users[0].attributes\r\n\r\n              // populate form with user data\r\n              this.setState({\r\n                point_id: user.OBJECTID,\r\n                office_id: user.office_id,\r\n                office_old: user.office_id,\r\n                driver: user.driver,\r\n                arrive_work: user.arrive_work,\r\n                leave_work: user.leave_work,\r\n                new_user: false,\r\n                start_addr: user.start_addr,\r\n                searchWidget: Search({\r\n                  container: document.getElementById(\"startLoc\"),\r\n                  searchTerm: user.start_addr\r\n                })\r\n              });\r\n\r\n              // the request promise seems to resolve after the component mounts\r\n              // so need to manually change the form values\r\n              document.getElementById(\"officeSelect\").value = user.office_id;\r\n              document.getElementById(\"driverSelect\").value = user.driver;\r\n              document.getElementById(\"arriveTime\").value = user.arrive_work;\r\n              document.getElementById(\"leaveTime\").value = user.leave_work;\r\n            }\r\n            else {\r\n              // set up blank Search Widget if new user\r\n              this.setState({\r\n                searchWidget: Search({\r\n                  container: document.getElementById(\"startLoc\")\r\n                })\r\n              });\r\n            }\r\n          });\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      });\r\n    //--------------------- Line ---------------------\\\\\r\n    const serviceUrl2 = 'https://services.arcgis.com/Wl7Y1m92PbjtJs5n/arcgis/rest/services/carpoolData/FeatureServer/1/query?';\r\n    const proxyUrl2 = 'https://belan2.esri.com/DotNet/proxy.ashx?'\r\n    let url2 = proxyUrl2 + serviceUrl2;\r\n\r\n    const data2 = {\r\n      \"f\": \"json\",\r\n      'where': \"email='\" + this.state.email + \"'\",\r\n      'outFields': \"*\"\r\n    };\r\n\r\n    const query2 = Object.keys(data2)\r\n      .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(data2[k]))\r\n      .join('&');\r\n\r\n    url2 = url2 + query2;\r\n\r\n    axios.get(url2)\r\n      .then(res => {\r\n        const users = res.data.features;\r\n        // fill in form and state with settings saved in db\r\n        if (users.length > 0) {  // check to see if user is already saved\r\n          const user = users[0].attributes\r\n\r\n          // populate form with user data\r\n          this.setState({\r\n            line_id: user.OBJECTID,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      });\r\n  };\r\n\r\n  //--------------------- SUBMIT HANDLER ---------------------\\\\\r\n  submitF = () => {\r\n    // load esri modules\r\n    loadModules([\r\n      \"esri/widgets/Search\",\r\n      \"esri/tasks/RouteTask\",\r\n      \"esri/tasks/support/RouteParameters\",\r\n      \"esri/tasks/support/FeatureSet\",\r\n      \"esri/Graphic\"\r\n    ]).then(([Search, RouteTask, RouteParameters, FeatureSet, Graphic]) => {\r\n      var that = this;\r\n      const address = document.getElementById(\"startLoc\").value;\r\n      // search the address that was input\r\n      this.state.searchWidget.search(address).then(event => {\r\n        // get the lat/lon and address\r\n        const lat = event.results[0].results[0].feature.geometry.latitude;\r\n        const lon = event.results[0].results[0].feature.geometry.longitude;\r\n        const addr = event.results[0].results[0].feature.attributes.Match_addr;\r\n\r\n        // if the address didn't change\r\n        if ((addr === that.state.start_addr) && (that.state.office_id === that.state.office_old)) {\r\n          that.setState({\r\n            lat: lat,\r\n            lon: lon,\r\n            start_addr: addr\r\n          });\r\n\r\n          // REST CALLS HERE\r\n          if (that.state.new_user) {\r\n            // if the user is not in the db, add the user\r\n            that.addUser();\r\n          } else {\r\n            // if the user is in the db, update the user info\r\n            that.updateUser();\r\n          }\r\n        }\r\n\r\n        // if the address changed\r\n        else {\r\n          that.setState({\r\n            lat: lat,\r\n            lon: lon,\r\n            start_addr: addr\r\n          });\r\n          var routeTask = new RouteTask({\r\n            url:\r\n              \"https://utility.arcgis.com/usrsvcs/appservices/w2zxoNZu0ai45kI5/rest/services/World/Route/NAServer/Route_World/solve\"\r\n          });\r\n\r\n          // Setup the route parameters\r\n          var routeParams = new RouteParameters({\r\n            stops: new FeatureSet(),\r\n            outSpatialReference: {\r\n              // autocasts as new SpatialReference()\r\n              wkid: 4326\r\n            }\r\n          });\r\n\r\n          const startPoint = {\r\n            type: \"point\", // autocasts as Point\r\n            longitude: lon,\r\n            latitude: lat,\r\n            spatialReference: {\r\n              wkid: 4326\r\n            }\r\n          };\r\n\r\n          var start = new Graphic({\r\n            geometry: startPoint\r\n          });\r\n\r\n          const officeCoords = {\r\n            1: [-117.1946114, 34.057267],\r\n            2: [-117.2180851, 34.0692566],\r\n            3: [-80.7835061, 35.100138],\r\n            4: [-77.0714945, 38.897275],\r\n            5: [-73.9947568, 40.7542076]\r\n          }\r\n\r\n          const endPoint = {\r\n            type: \"point\", // autocasts as Point\r\n            longitude: officeCoords[that.state.office_id][0],\r\n            latitude: officeCoords[that.state.office_id][1],\r\n            spatialReference: {\r\n              wkid: 4326\r\n            }\r\n          };\r\n\r\n          var end = new Graphic({\r\n            geometry: endPoint\r\n          });\r\n\r\n          // add start/office stops\r\n          routeParams.stops.features.push(start);\r\n          routeParams.stops.features.push(end);\r\n          // calc route\r\n          routeTask.solve(routeParams).then((res) => {\r\n            that.setState({ route: res.routeResults[0].route });\r\n            // REST CALLS HERE\r\n            if (that.state.new_user) {\r\n              // if the user is not in the db, add the user\r\n              that.addUser();\r\n            } else {\r\n              // if the user is in the db, update the user info\r\n              that.updateUser();\r\n            }\r\n          })\r\n            .catch((err) => {\r\n              alert(err.message)\r\n            });\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  //--------------------- JSX ---------------------\\\\\r\n  render() {\r\n    const startLoc = {\r\n      backgroundColor: \"white\",\r\n      padding: \"1px\",\r\n      border: \"1px solid lightgrey\",\r\n      borderRadius: \"4px\",\r\n      width: \"75%\"\r\n    };\r\n\r\n    const submitB = {\r\n      position: 'absolute',\r\n      bottom: '15px',\r\n      right: '20px'\r\n    };\r\n    const infoB = {\r\n      margin: \"0 0 0 5px\"\r\n    };\r\n\r\n    const settingStyle = {\r\n      margin: \"20px\"\r\n    };\r\n\r\n    if (this.state.form_complete === true) {\r\n      return <Redirect to='/results' />\r\n    }\r\n    return (\r\n      <Row className=\"justify-content-md-center\" style={settingStyle}>\r\n        <Col md={8}>\r\n          <Row>\r\n            <Col md={12}>\r\n              <p>\r\n                <b>This information will be used to match you with a carpool buddy!</b>\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <Row form>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"userName\">Name</Label>\r\n                <Input\r\n                  type=\"name\"\r\n                  name=\"name\"\r\n                  id=\"userName\"\r\n                  readOnly\r\n                  //onChange={e => this.setState({ new_user: true, name: e.target.value })}\r\n                  defaultValue={this.props.n}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"userEmail\">Email</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"userEmail\"\r\n                  readOnly\r\n                  //onChange={e => this.setState({ new_user: true, email: e.target.value })}\r\n                  defaultValue={this.props.e}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row form>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"arriveTime\">Arrive at Work</Label>\r\n                <Input\r\n                  type=\"time\"\r\n                  name=\"time\"\r\n                  id=\"arriveTime\"\r\n                  onChange={e => this.setState({ arrive_work: e.target.value })}\r\n                  defaultValue={this.state.arrive_work}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"leaveTime\">Leave Work</Label>\r\n                <Input\r\n                  type=\"time\"\r\n                  name=\"time\"\r\n                  id=\"leaveTime\"\r\n                  onChange={e => this.setState({ leave_work: e.target.value })}\r\n                  defaultValue={this.state.leave_work}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row form>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"driver\">Select</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"select\"\r\n                  id=\"driverSelect\"\r\n                  onChange={e => this.setState({ driver: e.target.value })}\r\n                >\r\n                  <option value={1}>Driver</option>\r\n                  <option value={2}>Passenger</option>\r\n                  <option value={3}>Either</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"exampleSelect\">Office Location</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"office\"\r\n                  id=\"officeSelect\"\r\n                  onChange={e => this.setState({ office_id: e.target.value })}\r\n                  defaultValue={this.state.office_id}\r\n                >\r\n                  <option value={1}>Redlands Main Campus</option>\r\n                  <option value={2}>Redlands V Buildings</option>\r\n                  <option value={3}>Charlotte</option>\r\n                  <option value={4}>Washington D.C.</option>\r\n                  <option value={5}>New York City</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={8}>\r\n              <FormGroup>\r\n                <Label for=\"startLocation\">Pickup Location</Label>\r\n                <Button id=\"PopoverFocus\" size=\"sm\" color=\"link\" style={infoB}>help</Button>\r\n                <UncontrolledPopover trigger=\"focus\" placement=\"auto\" target=\"PopoverFocus\">\r\n                  <PopoverBody> Use the search bar below and select a dropdown\r\n                  option. If you have privacy concerns, you can use a cross street\r\n                or store</PopoverBody>\r\n                </UncontrolledPopover>\r\n                <div id=\"startLoc\" style={startLoc} className=\"form-control\"></div>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Button\r\n                color=\"success\"\r\n                style={submitB}\r\n                className='float-right'\r\n                onClick={() => this.submitF()}>Save\r\n            </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settings;\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row, Button } from \"reactstrap\";\r\n\r\nclass Home extends Component {\r\n  // state = {};\r\n\r\n  // componentDidMount() {}\r\n  // componentWillUnmount() {}\r\n\r\n  render() {\r\n    const homeStyle = {\r\n      margin: \"20px\"\r\n    };\r\n    return (\r\n      <div style={homeStyle}>\r\n        <Row>\r\n          <Col md={12}>\r\n            <h2 className=\"text-center\">Welcome {this.props.n}</h2>\r\n           \r\n            <Col md={4}>\r\n            <p>If this is your first time visiting this app, fill out the <Button outline color=\"success\" size=\"sm\" href=\"/settings\">Settings</Button>{' '} to get started. </p>\r\n    \r\n            <p>Otherwise, you can skip directly to the <Button outline color=\"success\" size=\"sm\" href=\"/results\">Results</Button>{' '} to find a carpool buddy.</p>\r\n            </Col>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import Moment from 'moment';\r\nimport { extendMoment } from 'moment-range';\r\n\r\nconst moment = extendMoment(Moment);\r\n\r\n// helper functions\r\n\r\nexport function convertTime(time) {\r\ntime = time.split(':'); // convert to array\r\n\r\n// fetch\r\nvar hours = Number(time[0]);\r\nvar minutes = Number(time[1]);\r\n\r\n// calculate\r\nvar timeValue;\r\n\r\nif (hours > 0 && hours <= 12) {\r\n  timeValue= \"\" + hours;\r\n} else if (hours > 12) {\r\n  timeValue= \"\" + (hours - 12);\r\n} else if (hours === 0) {\r\n  timeValue= \"12\";\r\n}\r\n \r\ntimeValue += (minutes < 10) ? \":0\" + minutes : \":\" + minutes;  // get minutes\r\ntimeValue += (hours >= 12) ? \" PM\" : \" AM\";  // get AM/PM\r\n\r\nreturn timeValue;\r\n}\r\n\r\n\r\nexport function filterTime(arrive, leave, other_arrive, other_leave, filter) {\r\n // filter\r\n  var f = filter * 60000;\r\n\r\n  // times to check against\r\n  var m = new Date('01/01/1970 ' + other_arrive).getTime();\r\n  var n = new Date('01/01/1970 ' + other_leave).getTime();\r\n\r\n  // arrive\r\n  var x = new Date('01/01/1970 ' + arrive).getTime() - f;\r\n  var y = new Date('01/01/1970 ' + arrive).getTime() + f;\r\n\r\n  // leave\r\n  var a = new Date('01/01/1970 ' + leave).getTime() - f;\r\n  var b = new Date('01/01/1970 ' + leave).getTime() + f;\r\n\r\n  // create ranges\r\n  const range_arrive = moment.range(x, y);\r\n  const range_leave = moment.range(a, b);\r\n\r\n  return (range_arrive.contains(m) && range_leave.contains(n))\r\n  }","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Col, Row, Table, Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { loadModules } from \"esri-loader\";\r\nimport { convertTime, filterTime } from \"../helpers\"\r\n\r\nclass ResultTable extends Component {\r\n\r\n  state = {\r\n    data: [],\r\n    name: this.props.n,\r\n    email: this.props.e,\r\n    new_user_p: false,\r\n    new_user_l: false,\r\n    point_id: null,\r\n    line_id: null,\r\n    office_id: null,\r\n    driver: null,\r\n    arrive_work: null,\r\n    leave_work: null,\r\n    user_route: null,\r\n    distance: 5,\r\n    units: 1,\r\n    time: 30\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getUserByEmail();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  getData = () => {\r\n    const serviceUrl = 'https://services.arcgis.com/Wl7Y1m92PbjtJs5n/arcgis/rest/services/carpoolData/FeatureServer/0/query?';\r\n    const proxyUrl = 'https://belan2.esri.com/DotNet/proxy.ashx?'\r\n    let url = proxyUrl + serviceUrl;\r\n    const data = {\r\n      \"f\": \"json\",\r\n      \"returnGeometry\": true,\r\n      'where': '1=1',\r\n      'outFields': \"*\"\r\n    };\r\n\r\n    const query = Object.keys(data)\r\n      .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(data[k]))\r\n      .join('&');\r\n\r\n    url = url + query;\r\n\r\n    axios.get(url)\r\n      .then(res => {\r\n        // fill in form and state with settings saved in db\r\n        this.setState({ data: res.data.features });\r\n      }).catch(err => {\r\n        console.log(err)\r\n      });\r\n  };\r\n\r\n  getUserByEmail = () => {\r\n    //--------------------- POINT ---------------------\\\\\r\n    const serviceUrl = 'https://services.arcgis.com/Wl7Y1m92PbjtJs5n/arcgis/rest/services/carpoolData/FeatureServer/0/query?';\r\n    const proxyUrl = 'https://belan2.esri.com/DotNet/proxy.ashx?'\r\n    let url = proxyUrl + serviceUrl;\r\n\r\n    const data = {\r\n      \"f\": \"json\",\r\n      'where': \"email='\" + this.state.email + \"'\",\r\n      'outFields': \"*\"\r\n    };\r\n\r\n    const query = Object.keys(data)\r\n      .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(data[k]))\r\n      .join('&');\r\n\r\n    url = url + query;\r\n\r\n    axios.get(url)\r\n      .then(res => {\r\n        const users = res.data.features;\r\n        if (users.length > 0) {  // check to see if user is already saved\r\n          const user = users[0].attributes\r\n          // populate form with user data\r\n          this.setState({\r\n            point_id: user.OBJECTID,\r\n            office_id: user.office_id,\r\n            driver: user.driver,\r\n            arrive_work: user.arrive_work,\r\n            leave_work: user.leave_work\r\n          })\r\n          this.filterF();\r\n        }\r\n        else {\r\n          this.setState({\r\n            new_user_p: true\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      });\r\n    //--------------------- Line ---------------------\\\\\r\n    const serviceUrl2 = 'https://services.arcgis.com/Wl7Y1m92PbjtJs5n/arcgis/rest/services/carpoolData/FeatureServer/1/query?';\r\n    const proxyUrl2 = 'https://belan2.esri.com/DotNet/proxy.ashx?'\r\n    let url2 = proxyUrl2 + serviceUrl2;\r\n\r\n    const data2 = {\r\n      \"f\": \"json\",\r\n      'where': \"email='\" + this.state.email + \"'\",\r\n      'outFields': \"*\",\r\n      'returnGeometry': true\r\n    };\r\n\r\n    const query2 = Object.keys(data2)\r\n      .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(data2[k]))\r\n      .join('&');\r\n\r\n    url2 = url2 + query2;\r\n\r\n    axios.get(url2)\r\n      .then(res => {\r\n        const users = res.data.features;\r\n        // fill in form and state with settings saved in db\r\n        if (users.length > 0) {  // check to see if user is already saved\r\n          const user = users[0];\r\n\r\n          // populate form with user data\r\n          this.setState({\r\n            line_id: user.attributes.OBJECTID,\r\n            user_route: {\r\n              spatialReference: res.data.spatialReference,\r\n              paths: user.geometry.paths,\r\n              type: 'polyline'\r\n            }\r\n          });\r\n          this.filterF();\r\n        }\r\n\r\n        else {\r\n          this.setState({\r\n            new_user_l: true\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      });\r\n  };\r\n\r\n  filterF = () => {\r\n    const unitLookup = {\r\n      1: 'miles',\r\n      2: 'feet',\r\n      3: 'kilometers',\r\n      4: 'meters'\r\n    }\r\n\r\n    loadModules([\r\n      \"esri/layers/FeatureLayer\",\r\n      \"esri/config\"\r\n    ]).then(([FeatureLayer, esriConfig]) => {\r\n      esriConfig.request.proxyUrl = 'https://belan2.esri.com/DotNet/proxy.ashx?';\r\n      const serviceUrl = 'https://services.arcgis.com/Wl7Y1m92PbjtJs5n/arcgis/rest/services/carpoolData/FeatureServer/0/';\r\n\r\n      const featureLayer = new FeatureLayer(serviceUrl);\r\n\r\n      var query = featureLayer.createQuery();\r\n      query.geometry = this.state.user_route;  // the point location of the pointer\r\n      query.distance = Math.abs(this.state.distance);\r\n      query.units = unitLookup[this.state.units];\r\n      query.spatialRelationship = \"intersects\";  // this is the default\r\n      query.returnGeometry = true;\r\n      query.outFields = [\"*\"];\r\n      query.where = \"(office_id=\" + this.state.office_id + \") AND (NOT driver=\" + this.state.driver + \" OR driver=3) AND (NOT OBJECTID=\" + this.state.point_id + \")\";\r\n\r\n      const that = this;\r\n\r\n      featureLayer.queryFeatures(query)\r\n        .then(function (response) {\r\n          // returns a feature set\r\n          that.setState({ data: response.features });\r\n        })\r\n        .catch((err) => {\r\n          alert(err.message)\r\n        });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n    const tableStyle = {\r\n      backgroundColor: 'white',\r\n      border: '1px solid lightgrey',\r\n      borderRadius: '4px',\r\n      margin: '20px'\r\n    };\r\n\r\n    const mRight = {\r\n      margin: \"0 50px 0 0\"\r\n    };\r\n\r\n    const resultStyle = {\r\n      margin: \"20px\"\r\n    };\r\n\r\n    const distF = {\r\n      width: '130px'\r\n    };\r\n\r\n    function renderSwitch(param) {\r\n      switch (param) {\r\n        case 1:\r\n          return 'Driver';\r\n        case 2:\r\n          return 'Passenger';\r\n        default:\r\n          return 'Either';\r\n      };\r\n    };\r\n\r\n    if (this.state.new_user_l === true && this.state.new_user_p === true) {\r\n      alert('Fill out your Settings in order to find a carpool buddy')\r\n      return <Redirect to='/settings' />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md={8}>\r\n            <Row style={resultStyle}>\r\n              <Form inline>\r\n                <FormGroup>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"distF\"\r\n                    id=\"distF\"\r\n                    bsSize=\"sm\"\r\n                    style={distF}\r\n                    onChange={e => { this.setState({ distance: Math.abs(e.target.value) }); this.filterF() }}\r\n                    defaultValue={this.state.distance}\r\n                  />\r\n                </FormGroup>\r\n                <div style={mRight}>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"unitF\"\r\n                      id=\"unitF\"\r\n                      bsSize=\"sm\"\r\n                      onChange={e => { this.setState({ units: e.target.value }); this.filterF() }}\r\n                      defaultValue={this.state.units}>\r\n                      <option value={1}>miles</option>\r\n                      <option value={2}>feet</option>\r\n                      <option value={3}>kilometers</option>\r\n                      <option value={4}>meters</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                <div style={mRight}>\r\n                  <FormGroup>\r\n                    <InputGroup size=\"sm\">\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"timeF\"\r\n                        id=\"timeF\"\r\n                        bsSize=\"sm\"\r\n                        onChange={e => this.setState({ time: Math.abs(e.target.value) })}\r\n                        defaultValue={this.state.time}\r\n                      />\r\n                      <InputGroupAddon addonType=\"append\" >\r\n                        <InputGroupText>minutes</InputGroupText>\r\n                      </InputGroupAddon>\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n                </div>\r\n              </Form>\r\n            </Row>\r\n            <Row style={tableStyle}>\r\n              <Col md={12} >\r\n                <Table hover responsive>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Name</th>\r\n                      <th>Arrive At Work</th>\r\n                      <th>Leave Work</th>\r\n                      <th>Ride Preference</th>\r\n                      <th>Email</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {data.filter(d => filterTime(this.state.arrive_work, this.state.leave_work, d.attributes.arrive_work, d.attributes.leave_work, this.state.time))\r\n                      .map((fd) => (\r\n                        <tr key={fd.attributes.OBJECTID}>\r\n                          <td>{fd.attributes.name}</td>\r\n                          <td>{convertTime(fd.attributes.arrive_work)}</td>\r\n                          <td>{convertTime(fd.attributes.leave_work)}</td>\r\n                          <td>{renderSwitch(fd.attributes.driver)}</td>\r\n                          <td>{fd.attributes.email}</td>\r\n                        </tr>\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                </Table>\r\n                <div id=\"msg\"></div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div >\r\n    );\r\n  };\r\n}\r\n\r\nexport default ResultTable;","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { loadModules } from \"esri-loader\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport Header from \"./components/Header\";\r\nimport Settings from \"./components/Settings\";\r\nimport Home from \"./components/Home\";\r\nimport ResultTable from \"./components/ResultTable\";\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    name: null,\r\n    email: null\r\n  }\r\n\r\n  //--------------------- LIFE CYCLE FUNCTIONS ---------------------\\\\\r\n  componentDidMount() {\r\n    loadModules([\"esri/portal/Portal\", \"esri/identity/OAuthInfo\", \"esri/identity/IdentityManager\"])\r\n      .then(([Portal, OAuthInfo, IdentityManager]) => {\r\n        var info = new OAuthInfo({\r\n          appId: \"n5A1575tmQq5eFPd\",\r\n          popup: false\r\n        });\r\n\r\n        var that = this;\r\n\r\n        IdentityManager.registerOAuthInfos([info]);\r\n        IdentityManager.getCredential(info.portalUrl + \"/sharing\");\r\n        IdentityManager.checkSignInStatus(info.portalUrl + \"/sharing\")\r\n          .then((e) => {\r\n            var portal = new Portal();\r\n            // Setting authMode to immediate signs the user in once loaded\r\n            portal.authMode = \"immediate\";\r\n            // Once loaded, user is signed in\r\n            portal.load().then(function () {\r\n              // set state and form of email and name\r\n              that.setState({\r\n                name: portal.user.fullName,\r\n                email: portal.user.email\r\n              });\r\n            });\r\n          })\r\n\r\n      })\r\n      .catch(err => {\r\n        // handle any errors\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    loadModules([\"esri/identity/OAuthInfo\", \"esri/identity/IdentityManager\"])\r\n      .then(([OAuthInfo, IdentityManager]) => {\r\n        var info = new OAuthInfo({\r\n          appId: \"n5A1575tmQq5eFPd\",\r\n          popup: false\r\n        });\r\n        IdentityManager.registerOAuthInfos([info]);\r\n        IdentityManager.destroyCredentials();\r\n      });\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n\r\n  render() {\r\n    const { name, email } = this.state\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div>{!!email && !!name ?\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Home n={this.state.name} e={this.state.email} />\r\n              </Route>\r\n              <Route exact path=\"/settings\">\r\n                <Settings n={this.state.name} e={this.state.email} />\r\n              </Route>\r\n              <Route exact path=\"/results\">\r\n                <ResultTable n={this.state.name} e={this.state.email} />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n          : (\r\n            <div className=\"center\" >\r\n              <Spinner color=\"warning\" style={{ width: '3rem', height: '3rem' }} />\r\n            </div>\r\n          )}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}